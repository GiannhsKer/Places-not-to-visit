{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport uuid from 'react-native-uuid';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Forecast = function Forecast(_ref) {\n  var route = _ref.route;\n  var city = route.params.city;\n  var country = route.params.country;\n  var api_key = \"21e506d74d464ffa90d220042210612\";\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      airq = _useState2[0],\n      setairq = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weather = _useState4[0],\n      setweather = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      temp = _useState6[0],\n      settemp = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      time = _useState8[0],\n      settime = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      humidity = _useState10[0],\n      sethumidity = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      forecast = _useState12[0],\n      setforecast = _useState12[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData() {\n    try {\n      fetchData(\"https://api.weatherapi.com/v1/forecast.json?key=\" + api_key + \"&q=\" + city + \"&days=10&aqi=yes\").then(function (data) {\n        settime(data.location.localtime.slice(-5).replace(/ /g, '0'));\n        settemp(data.current.temp_c);\n        setweather([data.current.condition.text, data.current.condition.icon]);\n        sethumidity(data.current.humidity);\n        setairq(data.current.air_quality[\"us-epa-index\"]);\n        setforecast(data.forecast.forecastday);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsxs(ScrollView, {\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center',\n        fontSize: 30,\n        marginTop: 50\n      },\n      children: \"Places Not To Visit\"\n    }), _jsxs(Text, {\n      style: {\n        alignSelf: 'center',\n        fontSize: 23,\n        marginTop: 10,\n        color: 'blue'\n      },\n      children: [city, \", \", country]\n    }), _jsx(Image, {\n      source: {\n        uri: 'https://blog.weatherapi.com/wp-content/uploads/2020/02/cropped-Asset-62-1.png'\n      },\n      style: {\n        height: 80,\n        width: 170,\n        alignSelf: 'center',\n        marginTop: 20\n      }\n    }), _jsxs(View, {\n      style: styles.basicInfo,\n      children: [_jsx(Time, {\n        time: time\n      }), _jsx(Humidity, {\n        humidity: humidity\n      }), _jsx(Airq, {\n        airq: airq\n      }), _jsx(Weather, {\n        weather: weather\n      }), _jsx(Temperature, {\n        temp: temp\n      })]\n    }), _jsx(F_Forecast, {\n      forecast: forecast\n    })]\n  });\n};\n\nvar Humidity = function Humidity(_ref2) {\n  var humidity = _ref2.humidity;\n  return _jsxs(Text, {\n    style: styles.attribs,\n    children: [\"Humidity :\", humidity >= 80 || humidity <= 30 ? _jsxs(Text, {\n      style: [styles.values, {\n        color: 'red'\n      }],\n      children: [\" \", humidity]\n    }) : humidity > 60 && humidity < 80 ? _jsxs(Text, {\n      style: [styles.values, {\n        color: 'goldenrod'\n      }],\n      children: [\" \", humidity]\n    }) : humidity > 50 && humidity <= 60 ? _jsxs(Text, {\n      style: [styles.values, {\n        color: 'green'\n      }],\n      children: [\" \", humidity]\n    }) : humidity > 30 && humidity <= 50 ? _jsxs(Text, {\n      style: [styles.values, {\n        color: 'goldenrod'\n      }],\n      children: [\" \", humidity]\n    }) : _jsx(Text, {\n      style: [styles.values, {\n        color: 'red'\n      }],\n      children: \" Error getting humidity\"\n    })]\n  });\n};\n\nvar Time = function Time(_ref3) {\n  var time = _ref3.time;\n  return _jsxs(Text, {\n    style: styles.attribs,\n    children: [\"Current time : \", time]\n  });\n};\n\nvar Weather = function Weather(_ref4) {\n  var weather = _ref4.weather;\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: [_jsxs(Text, {\n      style: styles.attribs,\n      children: [\"Weather : \", weather[0]]\n    }), _jsx(Image, {\n      style: {\n        marginVertical: -15,\n        width: 40,\n        height: 50\n      },\n      source: {\n        uri: weather[1]\n      }\n    })]\n  });\n};\n\nvar Temperature = function Temperature(_ref5) {\n  var temp = _ref5.temp;\n  return _jsxs(Text, {\n    style: styles.attribs,\n    children: [\"Temperature : \", temp, \" \\xB0C\"]\n  });\n};\n\nvar Airq = function Airq(_ref6) {\n  var airq = _ref6.airq;\n  return _jsxs(Text, {\n    style: styles.attribs,\n    children: [\"Air Quality :\", airq <= 3 ? _jsx(Text, {\n      style: [styles.values, {\n        color: 'green'\n      }],\n      children: \" Good\"\n    }) : airq <= 6 ? _jsx(Text, {\n      style: [styles.values, {\n        color: 'goldenrod'\n      }],\n      children: \" Moderate\"\n    }) : airq <= 9 ? _jsx(Text, {\n      style: [styles.values, {\n        color: 'red'\n      }],\n      children: \" Bad\"\n    }) : airq >= 10 ? _jsx(Text, {\n      style: [styles.values, {\n        color: 'darkred'\n      }],\n      children: \" Really Bad\"\n    }) : _jsx(Text, {\n      style: [styles.values, {\n        color: 'red'\n      }],\n      children: \" Error getting air quality\"\n    })]\n  });\n};\n\nvar F_Forecast = function F_Forecast(_ref7) {\n  var forecast = _ref7.forecast;\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var d = new Date();\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      flex: 1 / 3,\n      marginTop: 20\n    },\n    horizontal: true,\n    children: forecast.map(function (weather, index) {\n      return _jsxs(View, {\n        style: styles.ForecastTabs,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20,\n            marginTop: 10\n          },\n          children: days[(d.getDay() + index) % 7]\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 20,\n            marginVertical: 20\n          },\n          children: [\"Day \", weather.day.maxtemp_c, \" \\xB0C\"]\n        }), _jsx(View, {\n          style: {\n            borderWidth: 1,\n            width: 130,\n            alignSelf: 'flex-start'\n          }\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 20,\n            marginVertical: 30\n          },\n          children: [\"Night \", weather.day.mintemp_c, \" \\xB0C\"]\n        })]\n      }, uuid.v4());\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  basicInfo: {\n    marginTop: 30,\n    marginHorizontal: 10,\n    alignItems: 'flex-start'\n  },\n  attribs: {\n    marginHorizontal: 10,\n    fontSize: 20\n  },\n  values: {\n    fontSize: 20\n  },\n  ForecastTabs: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(116, 205, 210, 0.54)',\n    marginHorizontal: 10,\n    height: 190,\n    width: 130\n  }\n});\nexport default Forecast;","map":{"version":3,"sources":["/home/yanes/Documents/Places-not-to-visit/screens/forecast.js"],"names":["React","useState","useEffect","uuid","Forecast","route","city","params","country","api_key","airq","setairq","weather","setweather","temp","settemp","time","settime","humidity","sethumidity","forecast","setforecast","fetchData","url","fetch","response","json","getData","then","data","location","localtime","slice","replace","current","temp_c","condition","text","icon","air_quality","forecastday","error","console","alignSelf","fontSize","marginTop","color","uri","height","width","styles","basicInfo","Humidity","attribs","values","Time","Weather","flexDirection","marginVertical","Temperature","Airq","F_Forecast","days","d","Date","flex","map","index","ForecastTabs","getDay","day","maxtemp_c","borderWidth","mintemp_c","v4","StyleSheet","create","marginHorizontal","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Image, ScrollView } from 'react-native';\nimport uuid from 'react-native-uuid';\n\nconst Forecast = ({route}) => {\n\n  const city = route.params.city\n  const country = route.params.country\n  const api_key = \"21e506d74d464ffa90d220042210612\"\n\n  const [airq, setairq] = useState('');\n  const [weather, setweather] = useState([]);\n  const [temp, settemp] = useState('');\n  const [time, settime] = useState('');\n  const [humidity, sethumidity] = useState('');\n  const [forecast, setforecast] = useState([]);\n\n  const fetchData = async (url) => {\n    const response = await fetch(url);\n    return response.json();\n  };\n\n  const getData = () => {\n    try {\n      fetchData(`https://api.weatherapi.com/v1/forecast.json?key=${api_key}&q=${city}&days=10&aqi=yes`).then(data => {\n        settime(data.location.localtime.slice(-5).replace(/ /g,'0'))\n        settemp(data.current.temp_c)\n        setweather([data.current.condition.text,data.current.condition.icon])\n        sethumidity(data.current.humidity)\n        setairq(data.current.air_quality[\"us-epa-index\"])\n        setforecast(data.forecast.forecastday)\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <ScrollView>\n        <Text style = {{ alignSelf : 'center', fontSize : 30 , marginTop : 50 }}>Places Not To Visit</Text>\t\t\t\t\n        <Text style = {{ alignSelf : 'center', fontSize : 23 ,marginTop : 10 , color: 'blue'}}>{city}, {country}</Text>\n      {/* Basic info display */}\n      <Image source = {{ uri: 'https://blog.weatherapi.com/wp-content/uploads/2020/02/cropped-Asset-62-1.png'}} style= {{ height:80, width:170, alignSelf:'center', marginTop: 20 }}></Image>\n      <View style={styles.basicInfo}>\n\n        <Time time = {time}/>\n        <Humidity humidity = {humidity}/>\n        <Airq airq = {airq} />\n        <Weather weather = {weather} />\n        <Temperature temp = {temp} />\n\n      </View>\n      <F_Forecast forecast={forecast} />\n    </ScrollView>\n  );\n}\n\nconst Humidity = ({humidity}) => {\n  return(\n    <Text style={styles.attribs}>Humidity :\n      { humidity >= 80 || humidity <= 30 ? <Text style={[styles.values, {color: 'red'}]}> {humidity}</Text> : \n        humidity > 60 && humidity < 80 ? <Text style={[styles.values, {color: 'goldenrod'}]}> {humidity}</Text> :\n        humidity > 50 && humidity <= 60 ? <Text style={[styles.values, {color: 'green'}]}> {humidity}</Text> :\n        humidity > 30 && humidity <= 50 ? <Text style={[styles.values, {color: 'goldenrod'}]}> {humidity}</Text> :\n        <Text style={[styles.values, {color: 'red'}]}> Error getting humidity</Text>\n      }\n    </Text>\n  )\n}\n\nconst Time = ({time}) => {\n  return(\n    <Text style={styles.attribs}>Current time : {time}</Text>\n  )\n}\n\nconst Weather = ({weather}) => {\n  return(\n    <View style={{flexDirection:'row'}}>\n    <Text style={styles.attribs}>Weather : {weather[0]}</Text>\n    <Image style={{ marginVertical: -15,width: 40,height: 50}} source={ {uri: weather[1]} }/>\n  </View>\n  )\n}\n\nconst Temperature = ({temp}) => {\n  return(\n    <Text style={styles.attribs}>Temperature : {temp} °C</Text>\n  )\n}\n\nconst Airq = ({airq}) => {\n  return(\n    <Text style={styles.attribs}>Air Quality : \n      { airq <= 3 ? <Text style={[styles.values, {color: 'green'}]}> Good</Text> : \n        airq <= 6 ? <Text style={[styles.values, {color: 'goldenrod'}]}> Moderate</Text> :\n        airq <= 9 ? <Text style={[styles.values, {color: 'red'}]}> Bad</Text> :\n        airq >=10 ? <Text style={[styles.values, {color: 'darkred'}]}> Really Bad</Text> :\n        <Text style={[styles.values, {color: 'red'}]}> Error getting air quality</Text>}\n    </Text> \n  )\n}\n\nconst F_Forecast = ({forecast}) => {\n\n  const days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n  const d = new Date();\n\n  return(\n    <ScrollView contentContainerStyle={{flex: 1/3, marginTop: 20 }} horizontal = {true}>\n      {forecast.map( (weather,index) => (\n        <View key ={uuid.v4()} style = {styles.ForecastTabs}>\n          <Text style={{fontSize:20, marginTop: 10}}>{days[(d.getDay() + index) % 7]}</Text>\n          <Text style={{fontSize:20, marginVertical: 20}}>Day {weather.day.maxtemp_c} °C</Text>\n          <View style={{borderWidth: 1, width: 130, alignSelf: 'flex-start'}}></View>\n          <Text style={{fontSize:20 , marginVertical: 30}}>Night {weather.day.mintemp_c} °C</Text>\n        </View>\n      ))}\n    </ScrollView> \n  )\n}\n\nconst styles = StyleSheet.create({\n  basicInfo : {\n    marginTop: 30,\n    marginHorizontal : 10,\n    alignItems : 'flex-start',\n  },\n  attribs: {\n    marginHorizontal: 10,\n    fontSize : 20\n  },\n  values: {\n    fontSize : 20\n  },\n  ForecastTabs : {\n    alignItems: 'center',\n    backgroundColor: 'rgba(116, 205, 210, 0.54)',\n    marginHorizontal: 10,\n    height: 190,\n    width: 130,\n  },\n});\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}