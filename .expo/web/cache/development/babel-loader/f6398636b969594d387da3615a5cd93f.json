{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.v4 = void 0;\n\nvar unparse_1 = require(\"./unparse\");\n\nvar rng_1 = require(\"./rng\");\n\nvar v4 = function v4(options, buf, offset) {\n  var i = buf && offset || 0;\n  var rnds = rng_1.rng();\n\n  if (options && !(options instanceof String)) {\n    if (options.random) {\n      rnds = options.random;\n    }\n\n    if (options.rng) {\n      rnds = options.rng();\n    }\n  }\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse_1.unparse(rnds);\n};\n\nexports.v4 = v4;","map":{"version":3,"sources":["../src/v4.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,SAAA,GAAA,OAAA,aAAA;;AACA,IAAA,KAAA,GAAA,OAAA,SAAA;;AAWO,IAAM,EAAE,GAAG,SAAL,EAAK,CAChB,OADgB,EAEhB,GAFgB,EAGhB,MAHgB,EAId;AAEF,MAAI,CAAC,GAAI,GAAG,IAAI,MAAR,IAAmB,CAA3B;AAIA,MAAI,IAAI,GAAa,KAAA,CAAA,GAAA,EAArB;;AAEA,MAAI,OAAO,IAAI,EAAE,OAAO,YAAY,MAArB,CAAf,EAA6C;AAC3C,QAAK,OAAqB,CAAC,MAA3B,EAAmC;AACjC,MAAA,IAAI,GAAI,OAAqB,CAAC,MAA9B;AACD;;AACD,QAAK,OAAqB,CAAC,GAA3B,EAAgC;AAC9B,MAAA,IAAI,GAAI,OAAqB,CAAC,GAAtB,EAAR;AACD;AACF;;AAGD,EAAA,IAAI,CAAC,CAAD,CAAJ,GAAW,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAX,GAAmB,IAA7B;AACA,EAAA,IAAI,CAAC,CAAD,CAAJ,GAAW,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAX,GAAmB,IAA7B;;AAGA,MAAI,GAAJ,EAAS;AACP,SAAK,IAAI,EAAE,GAAG,CAAd,EAAiB,EAAE,GAAG,EAAtB,EAA0B,EAAE,EAA5B,EAAgC;AAC9B,MAAA,GAAG,CAAC,CAAC,GAAG,EAAL,CAAH,GAAc,IAAI,CAAC,EAAD,CAAlB;AACD;AACF;;AAED,SAAO,GAAG,IAAI,SAAA,CAAA,OAAA,CAAQ,IAAR,CAAd;AACD,CAjCM;;AAAM,OAAA,CAAA,EAAA,GAAE,EAAF","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.v4 = void 0;\n/* eslint-disable no-bitwise */\nconst unparse_1 = require(\"./unparse\");\nconst rng_1 = require(\"./rng\");\n// **`v4()` - Generate random UUID**\n// See https://github.com/broofa/node-uuid for API details\nconst v4 = (options, buf, offset) => {\n    // Deprecated - 'format' argument, as supported in v1.2\n    let i = (buf && offset) || 0;\n    // buf = new Array<number>(16);\n    let rnds = rng_1.rng();\n    if (options && !(options instanceof String)) {\n        if (options.random) {\n            rnds = options.random;\n        }\n        if (options.rng) {\n            rnds = options.rng();\n        }\n    }\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    // Copy bytes to buffer, if provided\n    if (buf) {\n        for (var ii = 0; ii < 16; ii++) {\n            buf[i + ii] = rnds[ii];\n        }\n    }\n    return buf || unparse_1.unparse(rnds);\n};\nexports.v4 = v4;\n//# sourceMappingURL=v4.js.map"]},"metadata":{},"sourceType":"script"}