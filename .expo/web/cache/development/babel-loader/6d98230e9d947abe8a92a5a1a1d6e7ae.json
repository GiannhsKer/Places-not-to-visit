{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Searchbar } from 'react-native-paper';\nimport Results from \"./screens/results\";\nimport Screens from \"./screens/screens\";\nimport Display from \"./screens/display\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Results\",\n        component: Results\n      }), _jsx(Stack.Screen, {\n        name: \"Screens\",\n        component: Screens\n      }), _jsx(Stack.Screen, {\n        name: \"Display\",\n        component: Display\n      })]\n    })\n  });\n};\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.titles,\n      children: \"Places Not To Visit\"\n    }), _jsx(Searchbar, {\n      placeholder: \"search the city here\",\n      onChangeText: function onChangeText(query) {\n        return setQuery(query);\n      },\n      value: query,\n      style: styles.searchbar\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        title: \"Search\",\n        onPress: function onPress() {\n          return navigation.navigate('Results', {\n            place: query\n          });\n        }\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  titles: {\n    marginTop: 100,\n    alignSelf: 'center',\n    fontSize: 30\n  },\n  searchbar: {\n    alignSelf: 'center',\n    width: 300,\n    marginVertical: 50\n  },\n  button: {\n    width: 200,\n    alignSelf: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/home/yanes/Documents/Places-not-to-visit/App.js"],"names":["React","useState","NavigationContainer","createNativeStackNavigator","Searchbar","Results","Screens","Display","Stack","App","headerShown","Home","navigation","query","setQuery","styles","titles","searchbar","button","navigate","place","StyleSheet","create","container","flex","marginTop","alignSelf","fontSize","width","marginVertical"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;;;AAEA,IAAMC,KAAK,GAAGL,0BAA0B,EAAxC;;AAGA,IAAMM,GAAG,GAAG,SAANA,GAAM,GAAM;AAEf,SACG,KAAC,mBAAD;AAAA,cACE,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,aAAa,EAAI;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAlC;AAAwD,MAAA,gBAAgB,EAAE,MAA1E;AAAA,iBACE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEC;AAArC,QADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEN;AAAxC,QAFF,EAGE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEC;AAAxC,QAHF,EAIE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEC;AAAxC,QAJF;AAAA;AADF,IADH;AAUF,CAZD;;AAcA,IAAMI,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAE7B,kBAA0BX,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AAEC,SACG,MAAC,IAAD;AAAA,eACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAGC,MAAM,CAACC,MAArB;AAAA;AAAA,MADD,EAGC,KAAC,SAAD;AACG,MAAA,WAAW,EAAC,sBADf;AAEG,MAAA,YAAY,EAAE,sBAAAH,KAAK;AAAA,eAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,OAFtB;AAGG,MAAA,KAAK,EAAEA,KAHV;AAIG,MAAA,KAAK,EAAEE,MAAM,CAACE;AAJjB,MAHD,EASC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA,gBACC,KAAC,MAAD;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,OAAO,EAAG;AAAA,iBAAMN,UAAU,CAACO,QAAX,CAAoB,SAApB,EAA8B;AAACC,YAAAA,KAAK,EAAGP;AAAT,WAA9B,CAAN;AAAA;AAFZ;AADD,MATD;AAAA,IADH;AAkBF,CAtBD;;AAwBA,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,SAAS,EAAG,GADN;AAENC,IAAAA,SAAS,EAAE,QAFL;AAGNC,IAAAA,QAAQ,EAAE;AAHJ,GAJuB;AAS/BV,EAAAA,SAAS,EAAE;AACTS,IAAAA,SAAS,EAAE,QADF;AAETE,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,cAAc,EAAE;AAHP,GAToB;AAc/BX,EAAAA,MAAM,EAAE;AACNU,IAAAA,KAAK,EAAG,GADF;AAENF,IAAAA,SAAS,EAAE;AAFL;AAduB,CAAlB,CAAf;AAoBA,eAAejB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Searchbar } from 'react-native-paper';\nimport Results from './screens/results';\nimport Screens from './screens/screens'\nimport Display from './screens/display'\n\nconst Stack = createNativeStackNavigator();\n\n\nconst App = () => {\n\n   return (\n      <NavigationContainer >\n        <Stack.Navigator screenOptions = {{headerShown: false}} initialRouteName ='Home'>\n          <Stack.Screen name=\"Home\" component={Home} />\n          <Stack.Screen name=\"Results\" component={Results} />\n          <Stack.Screen name=\"Screens\" component={Screens} />\n          <Stack.Screen name=\"Display\" component={Display} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n};\n\nconst Home = ({navigation}) => {\n\n  const [query, setQuery] = useState('');\n \n   return (\n      <View>\n       <Text style ={styles.titles}>Places Not To Visit</Text>\n \n       <Searchbar\n          placeholder=\"search the city here\"\n          onChangeText={query => setQuery(query)}\n          value={query}\n          style={styles.searchbar}\n       />\n       <View style={styles.button}> \n        <Button\n          title = \"Search\"\n          onPress= {() => navigation.navigate('Results',{place : query }) }\n        />\n      </View>\n     </View>\n   )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  titles: {\n    marginTop : 100,\n    alignSelf: 'center',\n    fontSize: 30,\n  },\n  searchbar: {\n    alignSelf: 'center',\n    width: 300,\n    marginVertical: 50,\n  },\n  button: {\n    width : 200,\n    alignSelf: 'center'\n  },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}