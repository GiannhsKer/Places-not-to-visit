{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport uuid from 'react-native-uuid';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Webcams = function Webcams(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var city = route.params.city;\n  var country = route.params.country;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData() {\n    try {\n      fetchData(\"https://places-not-to-visit.herokuapp.com/\" + country + \"/\" + city).then(function (data) {\n        setData(data);\n      });\n    } catch (error) {\n      _jsxs(Text, {\n        children: [\"error getting \", country, \",\", city]\n      });\n    }\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: {\n          alignSelf: 'center',\n          fontSize: 30,\n          marginTop: 50\n        },\n        children: \"Places Not To Visit\"\n      }), _jsxs(Text, {\n        style: {\n          alignSelf: 'center',\n          fontSize: 23,\n          marginTop: 10,\n          color: 'blue'\n        },\n        children: [city, \", \", country]\n      })]\n    }), _jsx(Image, {\n      source: {\n        uri: \"https://worldcams.tv/img/logo.png\"\n      },\n      style: {\n        height: 70,\n        width: 135,\n        alignSelf: 'center',\n        marginTop: 30\n      }\n    }), _jsx(View, {\n      style: styles.container,\n      children: Object.keys(data).length > 0 ? Object.keys(data).map(function (place) {\n        return _jsxs(Pressable, {\n          onPress: function onPress() {\n            navigation.navigate('Display', {\n              'link': country + \"/\" + city + \"/\" + place\n            });\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: data[place][0]\n            },\n            style: styles.thumbnail\n          }), _jsx(Text, {\n            style: styles.thumbnail_text,\n            children: place\n          })]\n        }, uuid.v4());\n      }) : _jsxs(View, {\n        style: {\n          marginTop: 50\n        },\n        children: [_jsx(Text, {\n          style: styles.error_text,\n          children: \"No cameras found in\"\n        }), _jsxs(Text, {\n          style: styles.error_text,\n          children: [city, \", \", country]\n        }), _jsx(Text, {\n          children: Object.keys(data)[0]\n        }), _jsx(MaterialCommunityIcons, {\n          style: {\n            alignSelf: 'center'\n          },\n          name: \"alert-circle-outline\",\n          size: 24,\n          color: \"black\"\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 30,\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  },\n  titles: {\n    marginTop: 50,\n    alignSelf: 'center',\n    fontSize: 30\n  },\n  thumbnail: {\n    width: 150,\n    height: 100\n  },\n  thumbnail_text: {\n    marginVertical: 7,\n    alignSelf: 'center',\n    fontSize: 17\n  },\n  error_text: {\n    fontWeight: 'bold',\n    fontSize: 20\n  }\n});\nexport default Webcams;","map":{"version":3,"sources":["/home/yanes/Documents/Places-not-to-visit/screens/webcams.js"],"names":["React","useState","useEffect","MaterialCommunityIcons","uuid","Webcams","navigation","route","city","params","country","data","setData","fetchData","url","fetch","response","json","getData","then","error","alignSelf","fontSize","marginTop","color","uri","height","width","styles","container","Object","keys","length","map","place","navigate","thumbnail","thumbnail_text","v4","error_text","StyleSheet","create","flex","flexDirection","flexWrap","justifyContent","titles","marginVertical","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Image, ScrollView, Pressable } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport uuid from 'react-native-uuid';\n\nconst Webcams = ({navigation,route}) => {\n\n    const city = route.params.city\n    const country = route.params.country\n\n    const [data, setData] = useState([]);\n\n    const fetchData = async (url) => {\n        const response = await fetch(url);\n        return response.json();\n      };\n    \n    const getData = () => {\n        try {\n            fetchData(`https://places-not-to-visit.herokuapp.com/${country}/${city}`).then(data => {\n                setData(data);\n            });\n        } catch (error) {\n            <Text>error getting {country},{city}</Text>\n        }\n    };\n\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n\n        <ScrollView>\n            <View>\n                <Text style = {{ alignSelf : 'center', fontSize : 30 , marginTop : 50 }}>Places Not To Visit</Text>\t\t\t\t\n                <Text style = {{ alignSelf : 'center', fontSize : 23 ,marginTop : 10 , color: 'blue'}}>{city}, {country}</Text>\n            </View>\n            <Image source = {{ uri: \"https://worldcams.tv/img/logo.png\"}} style={{ height: 70, width: 135, alignSelf:'center', marginTop: 30 }}></Image>\n            <View style={styles.container}>\n                {Object.keys(data).length > 0 ? Object.keys(data).map(place => (\n                    <Pressable key = {uuid.v4()} onPress = {() => {navigation.navigate('Display',{'link': `${country}/${city}/${place}`})}} >\n                        <Image\n                            source= {{ uri: data[place][0] }}\n                            style = {styles.thumbnail}\n                        />\n                        <Text style = {styles.thumbnail_text}>{place}</Text>\n                    </Pressable>\n                ))\n                :   <View style = {{marginTop : 50}}>\n                        <Text style={styles.error_text}>No cameras found in</Text>\n                        <Text style={styles.error_text}>{city}, {country}</Text>\n                        <Text>{Object.keys(data)[0]}</Text>  \n                        <MaterialCommunityIcons style={{alignSelf : 'center'}} name=\"alert-circle-outline\" size={24} color=\"black\" />\n                    </View>\n                }\n            </View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        marginTop: 30,\n        flex: 1,\n        flexDirection : 'row',\n        flexWrap : 'wrap',\n        justifyContent: 'space-evenly'\n    },\n    titles: {\n        marginTop : 50,\n        alignSelf: 'center',\n        fontSize: 30,\n    },\n    thumbnail: {\n        width: 150,\n        height: 100,\n    },\n    thumbnail_text: {\n        marginVertical: 7 ,\n        alignSelf: 'center',\n        fontSize : 17\n    },\n    error_text : {\n        fontWeight : 'bold',\n        fontSize : 20,\n    }\n});\n\nexport default Webcams;"]},"metadata":{},"sourceType":"module"}